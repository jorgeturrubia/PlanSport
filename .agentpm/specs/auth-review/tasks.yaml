# ESTRUCTURA OBLIGATORIA - NO MODIFICAR
metadata:
  feature: auth-review
  total_tasks: 12
  estimated_hours: 10

tasks:
  setup:
    - id: SETUP-001
      description: Crear branch desde main
      command: git checkout main && git pull && git checkout -b feature/auth-review
      status: pending

  frontend:
    - id: FE-001
      description: Sustituir polling del guard por estrategia de inicialización (APP_INITIALIZER o canMatch resolver)
      location: ../src/front/SportPlanner/src/app/core/guards/
      files_to_modify:
        - ../src/front/SportPlanner/src/app/core/guards/auth.guard.ts
      acceptance:
        - Guard no usa setInterval; se apoya en señal de init completada
      status: pending

    - id: FE-002
      description: Añadir verificación inicial de sesión (verify) y reconstrucción de usuario tras refresh
      location: ../src/front/SportPlanner/src/app/core/services/
      files_to_modify:
        - ../src/front/SportPlanner/src/app/core/services/auth.service.ts
      acceptance:
        - Tras boot con tokens válidos, currentUser() !== null sin login manual
      status: pending

    - id: FE-003
      description: Implementar reintento único de refresh en interceptor ante 401 y repetir la request original
      location: ../src/front/SportPlanner/src/app/core/interceptors/
      files_to_modify:
        - ../src/front/SportPlanner/src/app/core/interceptors/token.interceptor.ts
      acceptance:
        - Si access expira y refresh es válido, la llamada se completa sin navegar a login
      status: pending

    - id: FE-004
      description: Asegurar canActivate/canMatch en todas las rutas protegidas (dashboard, teams, profile)
      location: ../src/front/SportPlanner/src/app/
      files_to_modify:
        - ../src/front/SportPlanner/src/app/app.routes.ts
      acceptance:
        - Navegar a /teams autenticado no redirige a login
      status: pending

    - id: FE-005
      description: Recordar y aplicar redirectUrl tras login exitoso
      location: ../src/front/SportPlanner/src/app/core/services/
      files_to_modify:
        - ../src/front/SportPlanner/src/app/core/services/auth.service.ts
      acceptance:
        - Si intento entrar a /teams sin sesión y luego hago login, aterrizo en /teams
      status: pending

  backend:
    - id: BE-001
      description: Crear endpoint GET /api/Auth/verify que valide access token y devuelva UserDto o 401
      location: ../src/back/SportPlanner/SportPlanner.Api/
      files_to_modify:
        - Controllers/AuthController.cs
        - Services/SupabaseAuthService.cs
      acceptance:
        - GET /api/Auth/verify con access válido -> 200 + user; inválido -> 401
      status: pending

    - id: BE-002
      description: Opcional - hacer que /refresh devuelva también user
      location: ../src/back/SportPlanner/SportPlanner.Api/
      files_to_modify:
        - Controllers/AuthController.cs
        - Services/SupabaseAuthService.cs
      acceptance:
        - POST /api/Auth/refresh -> access, refresh, expiresIn (+ user si se implementa)
      status: pending

  testing:
    - id: TEST-001
      description: Tests unitarios de AuthService, Guard e Interceptor
      location: ../src/front/SportPlanner/
      status: pending

    - id: TEST-002
      description: Prueba e2e de navegación protegida (login -> /teams -> recargar)
      location: ../src/front/SportPlanner/
      status: pending

