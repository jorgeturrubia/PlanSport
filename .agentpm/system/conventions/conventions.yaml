# Convenciones inmutables del proyecto
naming:
  components:
    angular: PascalCase          # UserListComponent
    react: PascalCase            # UserList
    vue: PascalCase              # UserList
    
  services:
    angular: PascalCase          # UserService
    dotnet: PascalCase           # UserService
    node: camelCase              # userService
    
  files:
    components: kebab-case       # user-list.component.ts
    services: kebab-case         # user.service.ts
    tests: .spec.ts or .test.ts  # user.spec.ts
    
  folders:
    features: kebab-case         # user-management
    shared: kebab-case           # shared-components
    
  git:
    branches: feature/[name] | fix/[name] | chore/[name]
    commits: type(scope): description
    types: [feat, fix, docs, style, refactor, test, chore]
    
code:
  indentation: 2                 # 2 espacios
  quotes: single                 # 'string'
  semicolons: false              # sin punto y coma
  line_length: 100               # máximo 100 caracteres
  
quality:
  test_coverage: 80              # mínimo 80%
  complexity: 10                 # complejidad ciclomática máxima
  duplication: 5                 # duplicación máxima 5%
  
angular_specific:
  change_detection: OnPush       # siempre OnPush
  components: standalone         # siempre standalone
  state: signals                 # preferir signals sobre observables
  routing: lazy                  # siempre lazy loading
  
dotnet_specific:
  async: always                  # siempre async/await
  pattern: repository            # siempre repository pattern
  validation: FluentValidation   # usar FluentValidation
  mapping: AutoMapper            # usar AutoMapper
  architecture: clean            # clean architecture
